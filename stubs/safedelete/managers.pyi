from .queryset import SafeDeleteQueryset
from django.db import models
from typing import Any, Optional, Tuple, Type, Union


class SafeDeleteManager(models.Manager):
    def __init__(self, queryset_class: Optional[Type[SafeDeleteQueryset]] = ...) -> None: ...

    def get_queryset(self): ...

    def all_with_deleted(self) -> models.QuerySet: ...

    def deleted_only(self) -> models.QuerySet: ...

    def all(self, **kwargs) -> models.QuerySet: ...

    def update_or_create(self, defaults: Union[Any, None] = ..., **kwargs) -> Tuple[models.Model, bool]: ...

    @staticmethod
    def get_soft_delete_policies(): ...


class SafeDeleteAllManager(SafeDeleteManager): ...


class SafeDeleteDeletedManager(SafeDeleteManager): ...
